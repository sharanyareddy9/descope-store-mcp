import { DescopeMcpProviderOptions } from "./schemas/options.js";
import DescopeClient from "@descope/node-sdk";
/**
 * Read an environment variable.
 *
 * Trims beginning and trailing whitespace.
 *
 * Will return undefined if the environment variable doesn't exist or cannot be accessed.
 */
export declare const readEnv: (env: string) => string | undefined;
/**
 * Configuration for Descope MCP endpoints
 */
interface DescopeEndpoints {
    issuer: URL;
    authorization: URL;
    token: URL;
    revocation: URL;
}
export declare class DescopeMcpProvider {
    readonly descope: ReturnType<typeof DescopeClient>;
    readonly projectId: string;
    readonly managementKey?: string;
    readonly baseUrl: string;
    readonly serverUrl: string;
    readonly descopeOAuthEndpoints: DescopeEndpoints;
    private readonly _options;
    constructor({ projectId, managementKey, baseUrl, serverUrl, ...opts }?: DescopeMcpProviderOptions);
    private initializeOptions;
    private initializeOAuthEndpoints;
    get options(): DescopeMcpProviderOptions;
}
export {};
//# sourceMappingURL=provider.d.ts.map