import { z } from "zod";
/**
 * Information about a validated access token, provided to request handlers.
 */
export declare const AuthInfoSchema: z.ZodObject<{
    /** The access token */
    token: z.ZodString;
    /** The client ID associated with this token */
    clientId: z.ZodString;
    /** Scopes associated with this token */
    scopes: z.ZodArray<z.ZodString, "many">;
    /** When the token expires (in seconds since epoch) */
    expiresAt: z.ZodOptional<z.ZodNumber>;
}, "strip", z.ZodTypeAny, {
    token: string;
    clientId: string;
    scopes: string[];
    expiresAt?: number | undefined;
}, {
    token: string;
    clientId: string;
    scopes: string[];
    expiresAt?: number | undefined;
}>;
export type AuthInfo = z.infer<typeof AuthInfoSchema>;
//# sourceMappingURL=auth.d.ts.map