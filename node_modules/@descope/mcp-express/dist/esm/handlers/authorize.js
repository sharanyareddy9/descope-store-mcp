import express from "express";
import { allowedMethods } from "../middleware/allowedMethods.js";
export function authorizationHandler(provider) {
    const router = express.Router();
    router.use(allowedMethods(["GET", "POST"]));
    router.use(express.urlencoded({ extended: false }));
    router.all("/", (req, res) => {
        const params = req.method === "POST" ? req.body : req.query;
        // If no scope is provided, add the default openid scope
        // While Descope handles empty scopes by returning defaults, we ensure consistency
        if (!params.scope) {
            params.scope = "openid";
        }
        // Redirect to the Descope authorization URL with all parameters
        const targetUrl = provider.descopeOAuthEndpoints.authorization;
        targetUrl.search = new URLSearchParams(params).toString();
        res.redirect(targetUrl.toString());
    });
    return router;
}
//# sourceMappingURL=authorize.js.map