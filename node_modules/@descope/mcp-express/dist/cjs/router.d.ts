import { RequestHandler } from "express";
import { DescopeMcpProvider } from "./provider.js";
import { McpServer } from "@modelcontextprotocol/sdk/server/mcp.js";
/**
 * Creates an MCP-compliant router with OAuth 2.0 Resource Server capabilities.
 *
 * By default, this router provides:
 * - Protected Resource Metadata (RFC 8705) - ALWAYS enabled
 * - Authorization Server Metadata (RFC 8414) - ALWAYS enabled
 * - MCP server endpoint (/mcp) - ALWAYS enabled with authentication
 * - Authorization Server endpoints (/authorize, /register) - DISABLED by default
 *
 * Most MCP servers should operate as Resource Servers, not Authorization Servers.
 * To enable Authorization Server functionality, set authorizationServerOptions.isDisabled = false.
 *
 * This router MUST be installed at the application root, like so:
 *
 *  const app = express();
 *  app.use(descopeMcpAuthRouter(...));
 */
export declare function descopeMcpAuthRouter(toolRegistration?: (server: McpServer) => void, provider?: DescopeMcpProvider): RequestHandler;
//# sourceMappingURL=router.d.ts.map